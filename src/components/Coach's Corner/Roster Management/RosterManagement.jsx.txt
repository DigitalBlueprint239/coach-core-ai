import React, { useState } from "react";
import AttendanceTable from "./AttendanceTable";
import PlayerForm from "./PlayerForm";
import AttendanceCheckIn from "./AttendanceCheckIn";
import { initialRoster } from "./rosterUtils";

const RosterManagement = ({ userRole = "coach", userId }) => {
  const [players, setPlayers] = useState(initialRoster);
  const [selectedPlayer, setSelectedPlayer] = useState(null);
  const [showPlayerForm, setShowPlayerForm] = useState(false);

  // Attendance data is stored as a map: { playerId: [dates...] }
  const [attendance, setAttendance] = useState({});

  const handleAddPlayer = (player) => {
    setPlayers([...players, player]);
    setShowPlayerForm(false);
  };

  const handleEditPlayer = (player) => {
    setPlayers(players.map((p) => (p.id === player.id ? player : p)));
    setShowPlayerForm(false);
  };

  const handleDeletePlayer = (playerId) => {
    setPlayers(players.filter((p) => p.id !== playerId));
  };

  const handleCheckIn = (playerId, date = new Date().toISOString().split("T")[0]) => {
    setAttendance((prev) => ({
      ...prev,
      [playerId]: [...(prev[playerId] || []), date],
    }));
  };

  return (
    <div className="p-4 max-w-3xl mx-auto">
      <h2 className="text-2xl font-bold mb-4">Roster Management & Attendance</h2>

      {userRole === "coach" && (
        <button
          className="bg-blue-600 text-white px-4 py-2 rounded-xl mb-4"
          onClick={() => {
            setSelectedPlayer(null);
            setShowPlayerForm(true);
          }}
        >
          + Add Player
        </button>
      )}

      {/* Player Form Modal */}
      {showPlayerForm && (
        <PlayerForm
          player={selectedPlayer}
          onSave={selectedPlayer ? handleEditPlayer : handleAddPlayer}
          onCancel={() => setShowPlayerForm(false)}
          players={players}
        />
      )}

      {/* Attendance Check-In */}
      <AttendanceCheckIn
        players={players}
        onCheckIn={handleCheckIn}
        userRole={userRole}
        userId={userId}
      />

      {/* Attendance Table */}
      <AttendanceTable
        players={players}
        attendance={attendance}
        onEditPlayer={(player) => {
          setSelectedPlayer(player);
          setShowPlayerForm(true);
        }}
        onDeletePlayer={handleDeletePlayer}
        userRole={userRole}
        userId={userId}
      />
    </div>
  );
};

export default RosterManagement;
