rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check file size (max 10MB)
    function isValidFileSize() {
      return request.resource.size < 10 * 1024 * 1024;
    }
    
    // Helper function to check file type
    function isValidFileType() {
      return request.resource.contentType.matches('image/.*') ||
             request.resource.contentType.matches('application/pdf') ||
             request.resource.contentType.matches('text/.*');
    }
    
    // User profile images
    match /users/{userId}/profile/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && 
                   request.auth.uid == userId &&
                   isValidFileSize() &&
                   isValidFileType();
    }
    
    // Team documents
    match /teams/{teamId}/documents/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && 
                   isValidFileSize() &&
                   isValidFileType();
    }
    
    // Practice plan attachments
    match /practice-plans/{planId}/attachments/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && 
                   isValidFileSize() &&
                   isValidFileType();
    }
    
    // Play diagrams and media
    match /plays/{playId}/media/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && 
                   isValidFileSize() &&
                   isValidFileType();
    }
    
    // Default deny all other access
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}
