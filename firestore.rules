rules_version='2'

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if current user matches a given ownerId
    function isOwner(ownerId) {
      return isAuthenticated() && request.auth.uid == ownerId;
    }

    // Helper function to check if user is the team owner
    function isTeamOwner(teamId) {
      return isOwner(get(/databases/$(database)/documents/teams/$(teamId)).data.ownerId);
    }

    // Teams collection
    match /teams/{teamId} {
      // Only the team owner can read the team document
      allow read: if isTeamOwner(teamId);

      // Users can create teams (they become the owner)
      allow create: if isAuthenticated() &&
        isOwner(request.resource.data.ownerId);

      // Only team owners can update team data
      allow update: if isTeamOwner(teamId);

      // Only team owners can delete teams
      allow delete: if isTeamOwner(teamId);

      // Players subcollection
      match /players/{playerId} {
        allow read, write: if isTeamOwner(teamId);
      }

      // Practices subcollection
      match /practices/{practiceId} {
        allow read, write: if isTeamOwner(teamId);
      }
    }

    // Practice Plans collection
    match /practicePlans/{planId} {
      // Only the team owner can read a practice plan
      allow read: if isTeamOwner(resource.data.teamId);

      // Only the team owner can create a practice plan
      allow create: if isTeamOwner(request.resource.data.teamId);

      // Only the team owner can update a practice plan
      allow update: if isTeamOwner(resource.data.teamId);

      // Only the team owner can delete a practice plan
      allow delete: if isTeamOwner(resource.data.teamId);
    }

    // Plays collection
    match /plays/{playId} {
      // Only the team owner can read a play
      allow read: if isTeamOwner(resource.data.teamId);

      // Only the team owner can create a play
      allow create: if isTeamOwner(request.resource.data.teamId);

      // Only the team owner can update a play
      allow update: if isTeamOwner(resource.data.teamId);

      // Only the team owner can delete a play
      allow delete: if isTeamOwner(resource.data.teamId);
    }
  }
}
