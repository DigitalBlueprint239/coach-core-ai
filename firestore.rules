rules_version='2'

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user is the team owner (coach)
    function isTeamOwner(teamId) {
      return isAuthenticated() &&
        get(/databases/$(database)/documents/teams/$(teamId)).data.ownerId == request.auth.uid;
    }

    // Teams collection
    match /teams/{teamId} {
      // Only the coach (owner) can read the team
      allow read: if isTeamOwner(teamId)
        else error('permission-denied', 'Only the coach can access this team.');

      // Coaches can create teams; they become the owner
      allow create: if isAuthenticated() &&
        request.resource.data.ownerId == request.auth.uid
        else error('permission-denied', 'Only authenticated coaches can create teams.');

      // Only team owners can update team data
      allow update: if isTeamOwner(teamId)
        else error('permission-denied', 'Only the coach can modify this team.');

      // Only team owners can delete teams
      allow delete: if isTeamOwner(teamId)
        else error('permission-denied', 'Only the coach can delete this team.');
    }

    // Practice Plans collection
    match /practicePlans/{planId} {
      // Only the coach can read practice plans
      allow read: if isTeamOwner(resource.data.teamId)
        else error('permission-denied', 'Only the coach can view practice plans.');

      // Only the coach can create practice plans
      allow create: if isAuthenticated() &&
        isTeamOwner(request.resource.data.teamId) &&
        request.resource.data.createdBy == request.auth.uid
        else error('permission-denied', 'Only the coach can create practice plans.');

      // Only the coach can update practice plans
      allow update: if isTeamOwner(resource.data.teamId)
        else error('permission-denied', 'Only the coach can modify practice plans.');

      // Only the coach can delete practice plans
      allow delete: if isTeamOwner(resource.data.teamId)
        else error('permission-denied', 'Only the coach can delete practice plans.');
    }

    // Plays collection
    match /plays/{playId} {
      // Only the coach can read plays
      allow read: if isTeamOwner(resource.data.teamId)
        else error('permission-denied', 'Only the coach can view plays.');

      // Only the coach can create plays
      allow create: if isAuthenticated() &&
        isTeamOwner(request.resource.data.teamId) &&
        request.resource.data.createdBy == request.auth.uid
        else error('permission-denied', 'Only the coach can create plays.');

      // Only the coach can update plays
      allow update: if isTeamOwner(resource.data.teamId)
        else error('permission-denied', 'Only the coach can modify plays.');

      // Only the coach can delete plays
      allow delete: if isTeamOwner(resource.data.teamId)
        else error('permission-denied', 'Only the coach can delete plays.');
    }
  }
}
