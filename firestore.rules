rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    function isCoach() {
      return isAuthenticated() && 
        request.auth.token.role == 'coach';
    }
    function isTeamOwner(teamId) {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/teams/$(teamId)).data.coachId == request.auth.uid;
    }
    function isPlayerInTeam(teamId) {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/teams/$(teamId)/players/$(request.auth.uid));
    }
    // Teams collection
    match /teams/{teamId} {
      allow read: if isAuthenticated() && 
        (isTeamOwner(teamId) || isPlayerInTeam(teamId));
      allow create: if isCoach();
      allow update: if isTeamOwner(teamId);
      allow delete: if isTeamOwner(teamId);
      // Players subcollection
      match /players/{playerId} {
        allow read: if isAuthenticated() && 
          (isTeamOwner(teamId) || request.auth.uid == playerId);
        allow write: if isTeamOwner(teamId);
      }
    }
    // Practices collection
    match /practices/{practiceId} {
      allow read: if isAuthenticated() && 
        isTeamOwner(resource.data.teamId);
      allow write: if isAuthenticated() && 
        isTeamOwner(request.resource.data.teamId);
    }
    // Analytics collection (read-only for coaches)
    match /analytics/{document=**} {
      allow read: if isCoach();
      allow write: if false; // Only backend can write
    }
  }
}
